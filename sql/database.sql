-- Create Database
CREATE DATABASE stackclone;
USE stackclone;

-- USERS TABLE
CREATE TABLE users (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    firstname VARCHAR(50) NOT NULL,
    lastname VARCHAR(50) NOT NULL,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    phone VARCHAR(20) NOT NULL,
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP

);

         
-- QUESTIONS TABLE
CREATE TABLE questions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  title VARCHAR(255) NOT NULL,
  description TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- ANSWERS TABLE
CREATE TABLE answers (
  id INT AUTO_INCREMENT PRIMARY KEY,
  question_id INT NOT NULL,
  user_id INT NOT NULL,
  content TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- COMMENTS TABLE (for either question or answer)
CREATE TABLE comments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  question_id INT DEFAULT NULL,
  answer_id INT DEFAULT NULL,
  user_id INT NOT NULL,
  content TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE,
  FOREIGN KEY (answer_id) REFERENCES answers(id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  CHECK (
    (question_id IS NOT NULL AND answer_id IS NULL) OR
    (question_id IS NULL AND answer_id IS NOT NULL)
  )
);



CREATE TABLE votes ( id INT AUTO_INCREMENT PRIMARY KEY, 
user_id INT NOT NULL, 
answer_id INT NOT NULL, 
vote_type ENUM('up', 'down') NOT NULL, 
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
UNIQUE KEY unique_vote (user_id, answer_id), 
FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE, 
FOREIGN KEY (answer_id) REFERENCES answers(id) ON DELETE CASCADE );

