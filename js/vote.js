document.addEventListener('DOMContentLoaded', function() {
  // Only attach vote handlers; do not load answers here
  attachVoteHandlers();
});

// Ø¯Ø§Ù„Ø© Ø¬Ø¯ÙŠØ¯Ø© Ù„Ø±Ø¨Ø· Ø£Ø²Ø±Ø§Ø± Ø§Ù„ØªØµÙˆÙŠØª
function attachVoteHandlers() {
  const upvoteButtons = document.querySelectorAll('.upvote');
  const downvoteButtons = document.querySelectorAll('.downvote');

  upvoteButtons.forEach(button => {
      button.addEventListener('click', function() {
          const answerId = this.getAttribute('data-answer-id');
          updateVote(answerId, 'up', this);
      });
  });

  downvoteButtons.forEach(button => {
      button.addEventListener('click', function() {
          const answerId = this.getAttribute('data-answer-id');
          updateVote(answerId, 'down', this);
      });
  });
}

function updateVote(answerId, voteType, button) {
const ratingElement = button.closest('.answer').querySelector('.rating-value');
let currentRating = parseInt(ratingElement.textContent);

fetch('../php/vote.php', {
method: 'POST',
headers: {
    'Content-Type': 'application/x-www-form-urlencoded'
},
body: `answer_id=${answerId}&vote_type=${voteType}`
})
.then(response => response.json()) // ðŸ‘ˆ Ù†ØªÙˆÙ‚Ø¹ JSON Ø¨Ø¯Ù„ Ø§Ù„Ù†Øµ Ø§Ù„Ø¹Ø§Ø¯ÙŠ
.then(data => {
if (data.status === 'success') {
    ratingElement.textContent = data.new_rating; // ðŸ‘ˆ Ù†Ø­Ø¯Ø« Ø§Ù„ØªÙ‚ÙŠÙŠÙ… Ø¨Ø§Ù„Ù‚ÙŠÙ…Ø© Ø§Ù„Ø¬Ø¯ÙŠØ¯Ø© Ù…Ù† Ø§Ù„Ø®Ø§Ø¯Ù…
} else {
    alert('You have already voted');

    ratingElement.textContent = currentRating;
}
})
.catch(error => {
console.error('Error:', error);
ratingElement.textContent = currentRating;
});
}